################################################################################################
# Creating an Entire Environment in Microsoft Azure                                            #
#                                                                                              #
# By Robert J. Calva - Red Hat LATAM - 2016                                                    #
#                                                                                              #
# NOTE: just set the location, Resoruce Group, Storage Account, Virtual Network, Public IP,    #
# Security Group and more variables as you wish!                                               #
#                                                                                              #
# IMPORTANT: for further information about Microsoft Azure, please take a look at this link:   #
# https://docs.microsoft.com/en-us/azure/                                                      #
#                                                                                              #
# Enjoy!                                                                                       #
################################################################################################

- name: Create an entire Environment in Azure
  hosts: localhost
  gather_facts: false
  connection: local
  vars:
        - location: centralus
        - resourcegroup: Test
        - storageaccount: test13267
        - virtualnetwork: Test
        - address_prefix: 10.10.0.0/16
        - subnet: test-subnet
        - subnet_prefix: 10.10.0.0/24
        - publicip: testpublicip01
        - nicname: testnic01
        - vmname: vmtest01
        - vmsize: Basic_A0 
        - username: centos
        - sshkeys:
  tasks:
    - name: Create a resource group
      azure_rm_resourcegroup:
        name: "{{ resourcegroup }}"
        location: "{{ location }}"
        state: present

    - name: Create a security group
      azure_rm_securitygroup:
        resource_group: "{{ resourcegroup }}"
        name: "{{ nicname }}"
        purge_rules: yes
        rules:
           - name: Allow
             protocol: Tcp
             destination_port_range: 22
             access: Allow
             priority: 100
             direction: Inbound
           - name: 'AllowHTTP'
             protocol: Tcp
             destination_port_range: 80
             access: Allow
             priority: 101
             direction: Inbound
           - name: 'AllowCockpit'
             protocol: Tcp
             destination_port_range: 9090
             access: Allow
             priority: 102
             direction: Inbound

    - name: Create storage account
      azure_rm_storageaccount:
        resource_group: "{{ resourcegroup }}"
        name: "{{ storageaccount }}"
        account_type: Standard_LRS

    - name: Create virtual network
      azure_rm_virtualnetwork:
        resource_group: "{{ resourcegroup }}"
        name: "{{ virtualnetwork }}"
        address_prefixes: "{{ address_prefix }}"

    - name: Add subnet
      azure_rm_subnet:
        resource_group: "{{ resourcegroup }}"
        name: "{{ subnet }}"
        address_prefix: "{{ subnet_prefix }}"
        virtual_network: "{{ virtualnetwork }}"

    - name: Create public ip
      azure_rm_publicipaddress:
        resource_group: "{{ resourcegroup }}"
        allocation_method: Static
        name: "{{ publicip }}"

    - name: Create NIC
      azure_rm_networkinterface:
        resource_group: "{{ resourcegroup }}"
        name: "{{ nicname }}"
        virtual_network: "{{ virtualnetwork }}"
        subnet: "{{ subnet }}"
        public_ip_name: "{{ publicip }}"
        security_group: "{{ nicname }}"

    - name: Create virtual machine
      azure_rm_virtualmachine:
        resource_group: "{{ resourcegroup }}"
        name: "{{ vmname }}"
        vm_size: "{{ vmsize }}"
        storage_account: "{{ storageaccount }}"
        storage_container: "{{ vmname }}"
        storage_blob: "{{ vmname }}.vhd"
        admin_username: "{{ username }}"
#        admin_password: "{{ password }}"
        ssh_password_enabled: False
        ssh_public_keys: 
           - path: /home/{{ username }}/.ssh/authorized_keys
             key_data: "{{ sshkeys }}" 
        network_interfaces: "{{ nicname }}"
        image:
          offer: CentOS
          publisher: OpenLogic
          sku: '7.1'
          version: latest
      register: azurevm

    - name: Debugging AzureVM Public IP
      debug: var=azurevm.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress

    - name: Setting AzureVM Public IP
      set_fact: host={{ azurevm.ansible_facts.azure_vm.properties.networkProfile.networkInterfaces[0].properties.ipConfigurations[0].properties.publicIPAddress.properties.ipAddress }}

    - name: Save host data within a Group
      add_host:
        hostname: "{{ host }}"
        groupname: azure_instances_temp

    - name: Wait for SSH to come up
      wait_for: host={{ host }} port=22 delay=10 timeout=60

- name: Configure Hosts post-creation
  hosts: azure_instances_temp
  gather_facts: True
  remote_user: centos
  become: yes
  become_method: sudo
  tasks:
  - name: Install Cockpit Console
    yum:
      name: "{{ item }}"
      state: latest
    with_items:
    - cockpit 
    - cockpit-dashboard

  - name: Start Cockpit Service
    service:
      name: cockpit.socket
      state: started
      enabled: yes
    
  - name: install Apache
    yum: 
      name: httpd
      state: latest

  - name: start Apache Service
    service:
      name: httpd
      state: started
      enabled: yes

  - name: create Test user
    user:
     name: test
     comment: "Test User created by Ansible"
     password: $1$ctRQ8kmb$PMF.2YAjQrdjiDGFuE4uw0
     group: wheel
